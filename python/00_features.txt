
# Неочевидные особенности языка Python


# позиционное распределение переменных
a,b,c = 1,2,3
a,b,c = [1,2,3]
a,*b,c = [1,2,3,4,5] # 1, [2,3,4], 5


# обмен значениями без создания доп переменной
a,b = 1,2
a,b = b,a
print(a, b) # 2 1


# целочисленное деление
print(123//10)


# в python нет пре/пост инкремента
i++ # ошибка


# True и False пишутся с большой буквы


# функции по умолчанию возвращают return None
# функция может вернуть несколько значений (кортеж)
return 1,2


# аргументы в функцию можно передавать по имени выборочно
def foo(a,b):
    print(a,b)

foo(1,b=2)


# Сравнение в строку
10 < 11 < 12


# В python нету switch/case


# Тернарный оператор
result = 'True' if 1 < 2 else 'False'


# Общепринятый codestyle
# Имена переменных
snake_case
# Имена класса
CamelCase


# Форматирование строки с помощью %
arr = [1, 2, 3]
'Like printf %s' % arr

'%s %%s' % 12


# Форматирование строки с помощью format()
"{1} {0} {1}'.format(1, 2)

'{:.2f}'.format(1.2345)
'%.2f' % 1.2345


# Форматирование строки с помощью f''
value = 123
f'text: {value!r}'


# Вложенные функции
# Область видимости как в js
def one(x):
    def two(y):
        return x * y
    return two

one(2)(3) # 6


# Аргументы переднные в коммандной строке
# import sys
print(sys.argv)
a,b,c = sys.argv
if not (b.isdigit() and c.isdigit()):
    print('not valid')


# Многострочный комментарий
'''qwe
asd
zxc'''
 

# Многострочный текст (кавычки могут быть одинарными или двойными)
str = '''one
two
three'''
print(str)

# Конкатенация
'one' + 'two'

# Длина символов
len('hello!')

# Поиск подстроки (# результат True or False)
'3' in '12345'

# Сравнение строк
'AAA' == 'aaa' # False
'abc' < 'r' # True

# Код символа
ord('a') # 97

# Индексы символов в строке
'0123456'[3] # 3
'0123456'[-1] # 6

# Срез (начало включается, конец НЕ включается)
'0123456789'[2:6] #2345
'0123456789'[:6] #012345
'0123456789'[2:] #23456789
# 3 параметр - шаг
'0123456789'[::2] #02468
'0123456789'[::-1] #9876543210

# нельзя исправлять букву по индексу
'0123'[2] = '4'
# для изменения нужно создать новую строку
s = '0123456789'
s = s[0:6:2] # 024

# методы строк
'qwe'.upper() # QWE
'QWE'.lower() # qwe
'sss'.count('s') # 3
'one two three'.find('two') # 4
'one two three'.rfind('two') # 4
'aaa'.replace('a', 'b') # 'bbb'
'abc'.isalpha() # True
'123'.isdigit() # True
'123'.ljust(4, '4') # 1234
'123'.rjust(4, '0') # 0123
'aaa bbb ccc'.split() # ['aaa', 'bbb', 'ccc']
'aaa,bbb,ccc'.split(',') # ['aaa', 'bbb', 'ccc']
' '.join(['a','b','c']) # 'a b c'
' a '.strip() # 'a'
'a '.rstrip() # 'a'
' a'.lstrip() # 'a'

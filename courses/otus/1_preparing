
//postgresql
- читается как постгрес-ql

//phpng
 - прототип jit-компилятора встроенного в opcache и основанного на llvm

//php7
- нет фаталов - есть только эксцепшны

//Транслятор
 - переводчик языка с высокоуровневого языка на более низкоуровневый

//Транспайлер
 - переводчик языка с высокоуровневого языка на высокоуровневый
 - typescript -> javascript

//Компилятор
 - частный случай транслятора
 - язык тренслируется в машинный код
 - gcc (gnu compiler collection)

//Интерпретатор
 - истолкователь
 - последовательно выполняет переданный ему код

//Байт-код
 - набор инструкций размером 1 байт каждая

//JVM языки
 - scala, kotlin, java
 - компиляторы для них разные
 - транслируются в одинаковый java байт-код

//PHP op-code
 - php транслируется в op-code
 - инструкции занимают не 1 байт

//Компиляция vs интерпретация
 - откомпилированные программы работают быстрее
 - интерпретируемые быстрее разрабатывать

//JIT-компиляция
 - just in time
 - есть в java
 - 1. компиляция исходного кода в байт-код
 - 2. передача бай-кода в jvm (программа на си, которая выполняет байт-код)
 - 3. jvm может находить в байт-коде участки инструкций, которые она может налету передать напрямую процессору
 - 4. jvm считывает результат из регистра и продолжает

//AOT
 - ahead of time
 - предварительная компиляция (например си)

//Типизация
 - статическая
 - динамическая

 - сильная - python, ruby (1 + 'строка' = ошибка)
 - слабая - php (1 + 'строка' = 1)

- в php динамическая слабая типизация
- можно написать
    - $a = 1;
    - if($a){...}

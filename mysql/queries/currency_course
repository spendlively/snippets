
////////////////////////////////////////////////////////////////////////////
//////////////////////////////////ЗАДАЧА////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
Есть таблица currency_course, в которой перечислены курсы валют за конкретную дату.
Поля таблицы currency_course: 
 - currency (тип валюты — USD, EUR и т.д.), 
 - date (дата установленного курса), 
 - course (курс валюты)

Требуется выбрать последние курсы по каждой валюте.





////////////////////////////////////////////////////////////////////////////
///////////////////////////////ИНИЦИАЛИЗАЦИЯ////////////////////////////////
////////////////////////////////////////////////////////////////////////////
DROP TABLE IF EXISTS `currency_course`;
CREATE TABLE `currency_course` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `currency` varchar(64) NOT NULL,
  `date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `course` decimal(19,5) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

INSERT INTO `currency_course` (`id`, `currency`, `date`, `course`) VALUES
(NULL, 'USD', '2018-01-01 12:00:00', 30),
(NULL, 'USD', '2018-01-02 12:00:00', 31),
(NULL, 'USD', '2018-01-03 12:00:00', 32),
(NULL, 'USD', '2018-02-01 12:00:00', 33),
(NULL, 'USD', '2018-02-02 12:00:00', 34),
(NULL, 'USD', '2018-02-03 12:00:00', 35),
(NULL, 'USD', '2018-03-01 12:00:00', 36),
(NULL, 'USD', '2018-03-02 12:00:00', 37),
(NULL, 'USD', '2018-03-03 12:00:00', 38),

(NULL, 'EUR', '2018-01-01 12:00:00', 40),
(NULL, 'EUR', '2018-01-02 12:00:00', 41),
(NULL, 'EUR', '2018-01-03 12:00:00', 42),
(NULL, 'EUR', '2018-02-01 12:00:00', 43),
(NULL, 'EUR', '2018-02-02 12:00:00', 44),
(NULL, 'EUR', '2018-02-03 12:00:00', 45),
(NULL, 'EUR', '2018-03-01 12:00:00', 46),
(NULL, 'EUR', '2018-03-02 12:00:00', 47),
(NULL, 'EUR', '2018-03-03 12:00:00', 48),

(NULL, 'JPY', '2018-01-01 12:00:00', 0.51),
(NULL, 'JPY', '2018-01-02 12:00:00', 0.52),
(NULL, 'JPY', '2018-01-03 12:00:00', 0.53),
(NULL, 'JPY', '2018-02-01 12:00:00', 0.54),
(NULL, 'JPY', '2018-02-02 12:00:00', 0.55),
(NULL, 'JPY', '2018-02-03 12:00:00', 0.56),
(NULL, 'JPY', '2018-03-01 12:00:00', 0.57),
(NULL, 'JPY', '2018-03-02 12:00:00', 0.58),
(NULL, 'JPY', '2018-03-03 12:00:00', 0.59);





////////////////////////////////////////////////////////////////////////////
//////////////////////////////////РЕШЕНИЕ///////////////////////////////////
////////////////////////////////////////////////////////////////////////////
currency_course
 - currency (тип валюты — USD, EUR и т.д.), 
 - date (дата установленного курса), 
 - course (курс валюты)
Требуется выбрать последние курсы по каждой валюте.

SELECT
    c1 currency
FROM currency_course c1










В таблице 1 000 000 записей. Необходимо предложить варианты выбора 10 случайных записей. Запрос вида select * from table order by rand() limit 10 не подойдет, т.к. очень «тяжелый».





В таблице 1 000 000 записей. Есть поле, которое принимает только одно из двух значений. Стоит ли индексировать по этому полю?





Необходимо предложить структуру базы данных для хранения древовидных комментариев.





Имеется таблица покупателей с полями: id, name
А также таблица продаж: id, cust_id, date, summ_pay
Необходимо:
а) Вывести лучшего покупателя.
б) Вывести лучших покупателей за каждый месяц.














DROP TABLE IF EXISTS `currency_course`;
CREATE TABLE `currency_course` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `currency` varchar(64) NOT NULL,
  `date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `course` decimal(19,5) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

INSERT INTO `currency_course` (`id`, `currency`, `date`, `course`) VALUES
(NULL, 'USD', '2018-01-01 12:00:00', 30),
(NULL, 'USD', '2018-01-02 12:00:00', 31),
(NULL, 'USD', '2018-01-03 12:00:00', 32),
(NULL, 'USD', '2018-02-01 12:00:00', 33),
(NULL, 'USD', '2018-02-02 12:00:00', 34),
(NULL, 'USD', '2018-02-03 12:00:00', 35),
(NULL, 'USD', '2018-03-01 12:00:00', 36),
(NULL, 'USD', '2018-03-02 12:00:00', 37),
(NULL, 'USD', '2018-03-03 12:00:00', 38),

(NULL, 'EUR', '2018-01-01 12:00:00', 40),
(NULL, 'EUR', '2018-01-02 12:00:00', 41),
(NULL, 'EUR', '2018-01-03 12:00:00', 42),
(NULL, 'EUR', '2018-02-01 12:00:00', 43),
(NULL, 'EUR', '2018-02-02 12:00:00', 44),
(NULL, 'EUR', '2018-02-03 12:00:00', 45),
(NULL, 'EUR', '2018-03-01 12:00:00', 46),
(NULL, 'EUR', '2018-03-02 12:00:00', 47),
(NULL, 'EUR', '2018-03-03 12:00:00', 48),

(NULL, 'JPY', '2018-01-01 12:00:00', 0.51),
(NULL, 'JPY', '2018-01-02 12:00:00', 0.52),
(NULL, 'JPY', '2018-01-03 12:00:00', 0.53),
(NULL, 'JPY', '2018-02-01 12:00:00', 0.54),
(NULL, 'JPY', '2018-02-02 12:00:00', 0.55),
(NULL, 'JPY', '2018-02-03 12:00:00', 0.56),
(NULL, 'JPY', '2018-03-01 12:00:00', 0.57),
(NULL, 'JPY', '2018-03-02 12:00:00', 0.58),
(NULL, 'JPY', '2018-03-03 12:00:00', 0.59);
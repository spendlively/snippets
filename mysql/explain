////////////////////////////////////////
////////Описание столбцов (11 шт)///////
////////////////////////////////////////

//id
 - идентификатор select'a, join, вложенного запроса или union'а


//select_type
 - показывает чему соответствует выводимая строка
 - simple - простой запрос, не содержащий вложенных запросов и т.д.
 - primary - самый внешний запрос в составном запросе
 - subquery - подзапрос в секции select (НЕ во from)
(может быть дополнен dependent и uncacheable)
 - derived - подзапрос в секции from - результат помещается во временную таблицу
 - union - 2й и т.д. select'ы в секции union
(может быть дополнен dependent и uncacheable)
 - union result - select для выборрки из временной таблицы созданной в ходе union


//table
 - показывает к какой таблице относится строка
 - читать этот столбец стоит сверху вниз,
чтобы видеть порядок соединения таблиц, выбранный оптимизатором
 - если select выбирает не из таблицы, а из подзапроса,
столбец будет содержать <derivedN>, где N - ID строки таблицы,
из которой выбирает подзапрос


//type
 - метод доступа - полное сканирование таблицы от начала до конца
 - значения перечислены от наилучшего к наихудшему
 - all - полное сканирование таблицы от начала до конца
 - index - сканирование таблицы в порядке задаваемом индексом (не в порядке следования строк),
преимущество - не требуется сортировка,
недостаток - высокая стоимость чтения всей таблицы,
если в столбце extra стоит "Using index", значит mysql использует покрывающий индекс
 - range - поиск начинается в опред. точке индекса и возвращает некоторый диапазон значений,
пример: between, < или > в секции where
 - ref - поиск строк по индексу соответствующих единственному значению (в случае неуникального индекса)
 - eq_ref - поиск одной строки по индексу соответствующей единственному значению
(в случае первичного ключа или уникального индекса для сравнения на равенство)
 - const, system - в процессе оптимизации часть запроса можно преобразовать в константу
 - null - mysql сумела разрешить запрос на фазе оптимизации


//possible_keys
 - ключи которые возможно использовать


//key
 - ключ который mysql решила задействовать


//key_len
 - количество байт ключа которые были использованы
 - по нему можно сделать вывод что задействован только первый столбец составного ключа


//ref
 - показывает какие столбцы и константы из предыдущих таблиц задействованы для поиска в индексе,
имя которого указано в столбце key


//rows
 - количество строк таблицы которые по оценке mysql придется просмотреть


//filtered
 - пессимистическая оценка процентной доли строк, удовлетворяющих критерию,
заданному в where или в условиях соединения
 - если умножить на значение в столбце rows, получится число строк,
которое mysql должна соединить с предыдущими таблицами
 - используется только для след. type: all, index, range, index_merge
 - если filtered около 50%,
mysql может решить использовать type=all вместо type=range,
полагая, что метод полного перебора обойдется дешевле


//extra
 - дополнительная информация
 - using index - использован покрывающий индекс
 - using where - сервер производит доп фильтрацию, то есть
запрос можно было бы выполнить более эффективно при другом индексировании
 - using temporary - mysql будет применять временную таблицу для сортировки результатов запроса,
(на диске или в памяти)
 - using filesort - mysql прибегнет к обычной сортировке для упорядочения,
а не станет читать строки из таблицы в порядке задаваемом индексом (в пямяти или на диске)
 - range checked for each record (index map: N) - подходящего индекса не нашлось
и сервер будет заново искать индекс при обработке кажной строки в операции соединения,
где N - битовая карта индексов показанных в possible_keys




////////////////////////////////////////
//////////////Дополнительно/////////////
////////////////////////////////////////

//Визуальное отображение explain в древовидном формате
 - mk-visual-explain в комплекте Maatkit


//анализ update, insert и delete
 - некоторые отличные от select запросы можно преобразовать в эквивалентный запрос select,
при этом любой упоминаемый в исходном запросе столбец,
должен присутствовать либо в select, либо в where, либо в условиях соединения


//варианты выполнения explain
 - explain select...
 - explain extend select..., show warnings (чтобы посмотреть как оптимизатор трансформировал исходный запрос)
 - explain partitions


//Поиск медленных запросов
log-slow-queries = /var/lib/mysql/slow-log
long_query_time=5
#long-queries-not-usung-indexes

//Чтение журнала медленных запросов
mysqldumpslow -help


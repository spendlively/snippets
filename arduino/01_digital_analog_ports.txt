//Цифровые порты
 - При конфигурировании цифрового порта на запись,
можно передать на него высокий уровень сигнала (HIGH) или низкий (LOW).
 - При конфигурировании цифрового порта на чтение,
можно считать с него высокий уровень сигнала (HIGH) или низкий (LOW).


//Аналоговые порты
 - При конфигурировании аналогового порта на запись,
можно передать на него любое напряжение от 0 до 5 вольт (число от 0 до 1023),
для имитации напряжения от 0 до 5 вольт используется ШИМ.
 - При конфигурировании аналогового порта на чтение,
можно считать с него любое напряжение от 0 до 5 вольт (число от 0 до 1023),
для считывания сигнала используется 6-ти канальный АЦП с дискретизацией 10 бит (0-1023).
 - Аналоговые порты применяются для чтения ввода с аналоговых датчиков,
но могут быть сконфигурированы и в качестве цифровых портов.
 - Для использования аналогово порта в цифровом режиме используются подтягивающие резисторы,
чтобы включить подтягивающий резистор на выводе аналогового порта:
digitalWrite(14, HIGH);


//Конфигурация порта
pinMode(14, OUTPUT);
digitalWrite(14, HIGH);


//Доступнын режимы портов
//pinMode(11, INPUT);
 - в этом состоянии вы можете подключить практически любую нагрузку,
потому что к входу неявным образом подключается высокоомный (десяток мегаом) резистор.

//pinMode(11, OUTPUT);
 - на внешнее устройство выдается максимально возможный ток,
плата, по сути, становится  источником тока

//pinMode(11, INPUT_PULLUP);
 - пин работает в режиме входа, но Arduino неявно для нас подключает к входной цепи внутренний подтягивающий резистор
 - При этом поступление сигнала с датчика будет «инвертироваться»,
т.е. высокий уровень будет приводить к нулю на входе, низкий, наоборот, оставит на пине высокое напряжение.


//INPUT_PULLUP
 - Режим INPUT_PULLUP широко используется при работе с кнопками в Ардуино.
 - В не нажатом состоянии подключенная к пину кнопка создает неопределенное состояние
(а провод, ведущий к Arduino выступает в роли своеобразной антены, усиливающей все наводки).
 - Для исправления ситуации в схему добавляют подтягивающий резистор.
 - Использование команды pinMode с параметром INPUT_PULLUP позволяет обойтись без дополнительного внешнего сопротивления,
используя внутренний резистор Arduino.
 - Альтернативным способом использования INPUT_PULLUP является
подача высокого уровня напряжения на вход, находящийся в режиме INPUT.
 - Команда digitalWrite(10, HIGH) для пина 10, установленного в режим INPUT,
включит внутренний резистор так же, как это сделала бы команда pinMode(10, INPUT_PULLUP).

<?php

echo "0 == array()\n";
var_dump(0 == array());
echo "\n======================\n\n";

echo "true == array()\n";
var_dump(true == array());
echo "\n======================\n\n";

echo "1 == array()\n";
var_dump(1 == array());
echo "\n======================\n\n";

echo "null == array()\n";
var_dump(null == array());
echo "\n======================\n\n";

echo "false == array()\n";
var_dump(false == array());
echo "\n======================\n\n";


/*
0 == array()
bool(false)

======================

true == array()
bool(false)

======================

1 == array()
bool(false)

======================

null == array()
bool(true)

======================

false == array()
bool(true)

======================


*/
============================================================================================
============================================================================================
============================================================================================
break прерывает выполнение текущей структуры for, foreach, while, do-while или switch.
============================================================================================
============================================================================================
============================================================================================
Чтобы при использовании тега input с типом image во время выполнения PHP-сценария узнать координаты точки на изображении, по которой щелкнул пользователь, следует:

//обратиться к переменным <содержание атрибута name в элементе input>_x и <содержание атрибута name в элементе input>_y
============================================================================================
============================================================================================
============================================================================================
<?php

define("FOO","значение константы");
$bar = is_defined("FOO");
echo $bar;

//PHP Fatal error:  Call to undefined function is_defined() in /home/spendlively/php/intuit/define.php on line 4
============================================================================================
============================================================================================
============================================================================================
<?php

//http://127.0.0.1:8888/define2.php?foo=bar

define("_GET","BAR");
var_dump($_GET);

//array(1) { ["foo"]=> string(3) "bar" } 	
============================================================================================
============================================================================================
============================================================================================
<?php

$a = 1;
$b = 3;
echo $c -= $a += (bool) 19.5/1.5 and 1 - $b * ! $b;

//PHP Notice:  Undefined variable: c in /home/spendlively/php/intuit/ex.php on line 5
============================================================================================
============================================================================================
============================================================================================
<?php
$a = 1;
echo $a++ + ++$a;

//4
============================================================================================
============================================================================================
============================================================================================
<?php
$a = $b = true; 
echo ($a && $b and $b || ! $b <> ! $a && $b or $a );

//1
============================================================================================
============================================================================================
============================================================================================
<?php
$a = array(1,2,3,2,1);
$s = <<;
for($i=0;$i<count($a);$i++)
{
	if($i%5 == 0)continue;
	if( $a[$i]% -3 >= 0)break;
	$s.=$a[$i];
}
echo $s;

//PHP Parse error:  syntax error, unexpected '<<' (T_SL) in /home/spendlively/php/intuit/ex4.php on line 3

?>
============================================================================================
============================================================================================
============================================================================================
<?php
$a = -1;
if(strlen($a) && $a)
	echo "Foo";
if($a ! $a-1)
	echo "ooF";
else
	echo "bar";

//Нужно получтить Foobar

//Для всех ("-1" "1" 1 -1 )

//PHP Parse error:  syntax error, unexpected '!' in /home/spendlively/php/intuit/ex5.php on line 5

?>
============================================================================================
============================================================================================
============================================================================================
<?php
$msg = false;
$day = false;
switch($day)
{
	case "1": case array(1): $msg*="1";break;
	case "-1": case array(): $msg*="2";break;
	default: $msg*="1";break;
}
echo $msg;


//0
============================================================================================
============================================================================================
============================================================================================
<?php
$a = array("1","3","2","4","3");
foreach($a as $key => $value )
{
	$a[$key] = ""; unset($a[$key+1]);
}
var_dump(implode("-",$a));

//Пустая строка получится при 
// __1__ = $key => $value
// __2__ = unset($a[$key])
============================================================================================
============================================================================================
============================================================================================
<?php
$a = array( array( 14, 4 ), array( 5, 5 ) );
echo $a[1][1]," ",$a[0][0]," ",$a[1][0]," ",$a[0][1];

//$a[1][1]," ",$a[0][0]," ",$a[1][0]," ",$a[0][1];
//5 14 5 4
============================================================================================
============================================================================================
============================================================================================
<?php
$a = array( array( 2, 4 ), array( 2, 3 ) );
$b = array( 1 );
$b = &$a;
$a[0][1] = $a[1][0] = 33;
echo $b[0][1]," ",$b[0][0]," ",$b[1][0]," ",$b[1][1];

//33 2 33 3
?>
============================================================================================
============================================================================================
============================================================================================
<?php
$a = array( array( 2, 15 ), array( 3, 14 ) );
$b = &$a[0]; $b[0] = 66;
$b = &$a[1]; $b[1] = 55;
echo $a[0][0]," ",$a[0][1]," ",$a[1][0]," ",$a[1][1];

//66 15 3 55
============================================================================================
============================================================================================
============================================================================================
<?php
$a = array( true,-1,true,-1,true,NULL );
echo prev($a),"|",next($a),"|",prev($a),"|",prev($a),"|";

//| | | |
?>
============================================================================================
============================================================================================
============================================================================================
<?php
$b = $a = array( 	"1" => "1", 	"2" => "2", 	"11" => "3", 
"12" => "4", 	"21" => "5", 	"22" => "6" );
rsort($b);
echo implode(" ", $b+$a);

//6 5 4 3 2 1 3 4 5 6
?>
============================================================================================
============================================================================================
============================================================================================
<?php
$s1 = "string = "; $s1 += "11" . "rt4";
$s2 = "string = "; $s2 .= "11" . "rt4";
$s3 = "56" + "rt4";
echo "|".($s1 === $s2)." |".($s1 === $s3)." |";

//| | |
============================================================================================
============================================================================================
============================================================================================
<?php
$a = array( "USELESS STRING", "SOME TEXT" );
echo $a[0][3].$a[0]{11}.$a[1][0].$a[1]{8}.$a[0][11].$a[0]{12}.$a[0][13];

//LISTING
============================================================================================
============================================================================================
============================================================================================
<?php
$s = "11112223333";
echo $f1 = ($s{2}>1 && $s{3}<8)," и ";
echo $f2 = ($s{strlen($s)-1}==4 || $s{strlen($s)-1}==3);

// и 1
============================================================================================
============================================================================================
============================================================================================
<?php

$haystack = "Строка, содержащая искомое значение";
//$needle = $_GET["foo"];
$needle = "содержащая";
$n = strpos($haystack, $needle);
if($n!==FALSE)
	echo "Первое найденное вхождение - на символе №".$n;
else
	echo "Подстрока не была найдена";

//strrpos($haystack,$needle); 
//Первое найденное вхождение - на символе №14

//strpos($needle, $haystack);
//Подстрока не была найдена

//strstr($haystack,$needle);
//Первое найденное вхождение - на символе №содержащая искомое значение

//strpos($haystack, $needle);
//Первое найденное вхождение - на символе №14
?>
============================================================================================
============================================================================================
============================================================================================
<?php
function foo(&$foo) {($foo!="foo")?bar($foo):$foo.="bar";return $foo;}
function bar(&$bar) {echo $bar;}
$foo = foo;
$bar = bar;
$foo(foo($foo));

//PHP Notice:  Use of undefined constant foo - assumed 'foo' in /home/spendlively/php/intuit/ex17.php on line 4
//PHP Notice:  Use of undefined constant bar - assumed 'bar' in /home/spendlively/php/intuit/ex17.php on line 5

============================================================================================
============================================================================================
============================================================================================
<?php
function foo($bar) 
{
	echo $foo;
}
$foo = "bar";
foo($foo);

//PHP Notice:  Undefined variable: foo in /home/spendlively/php/intuit/ex18.php on line 4
//foobar
============================================================================================
============================================================================================
============================================================================================
<?php
function foo()
{
	$n = func_num_args();$p = func_get_args();
	$args = array_fill(0,$n,$p);
	foreach($args as $value) 
	{
		echo $value," ";
	}
}
foo("a", "b", "c");

//PHP Notice:  Array to string conversion in /home/spendlively/php/intuit/ex19.php on line 8
//Array PHP Notice:  Array to string conversion in /home/spendlively/php/intuit/ex19.php on line 8
//Array PHP Notice:  Array to string conversion in /home/spendlively/php/intuit/ex19.php on line 8
//Array
============================================================================================
============================================================================================
============================================================================================
<?php
function foo(&$bar)
{
$bar++;
}
$a = 1;
call_user_func_array("foo", array(&$a));
echo $a;

//2
============================================================================================
============================================================================================
============================================================================================
<?php

$var = "test";

function foo(){
	global $var;
	unset($var);
	var_dump($var);
	//var_dump($var);
}

var_dump($var);
foo();
var_dump($var);
============================================================================================
============================================================================================
============================================================================================
session_is_registered — Определяет, зарегистрирована ли глобальная переменная в сессии
============================================================================================
============================================================================================
============================================================================================
Хотя в PHP и нет необходимости инициализировать переменные, это считается очень хорошей практикой. Неинициализированные переменные принимают значение по умолчанию в зависимости от их типа, который определяется из контекста их первого использования: булевы принимают значение FALSE, целые и числа с плавающей точкой - ноль, строки (например, при использовании в echo) - пустую строку, а массивы становятся пустыми массивами.

Тип переменной:
$var = "test";
gettype($var)
echo is_string($var);
============================================================================================
============================================================================================
============================================================================================
index.php
<?php header("Content-Type:text/html; charset=utf8"); ?>
<html><head><title>Выбор нескольких элементов</title></head><body>
<form method="POST" action="select.php">
<select name="foo[]" multiple="yes">
<option>значение1</option>
<option>значение2</option>
<option>значение3</option>
</select>
<input type="submit" value="Выбрать">
</form></body></html>


select.php
<?php header("Content-Type:text/html; charset=utf8"); ?>
<html><head><title>Отображение выбранных элементов</title></head><body>
Вы выбрали:
<?php
echo $_POST["foo"][0]," |",$_POST["foo"][1]," |",$_POST["foo"][2]," |";
?>
</body></html>

<?php
//Пользователь выбрал элементы "значение2" и "значение3". Укажите результат выполнения сценария:

//Вы выбрали: значение2 |значение3 | |
============================================================================================
============================================================================================
============================================================================================
index.php
<?php header("Content-Type:text/html; charset=utf8"); ?>
<html><head><title>Вопрос</title></head><body>
<form method="POST" action="process.php?text_input=текст">
<input name="text_input" type="text">
<input type="submit" value="ОК">
</form></body></html>

<?php
//Укажите результат выполнения сценария для случая, когда пользователь оставил текстовое поле на форме нетронутым:

//пустая строка

process.php
<?php header("Content-Type:text/html; charset=utf8");
var_dump($_REQUEST["text_input"]);
?>
============================================================================================
============================================================================================
============================================================================================
a.php
<?php
header("Content-Type:text/html; charset=utf8");
$_SESSION["prev_page"] = "a.php";
?>
<a href="b.php">Перейти на следующую страницу</a>

b.php
<?php
header("Content-Type:text/html; charset=utf8");
session_start();
var_dump("Вы пришли с ".$_SESSION["prev_page"]);
?>

============================================================================================
============================================================================================
============================================================================================
a.php
<?php
header("Content-Type:text/html; charset=utf8");
session_start();
$_SESSION["a"] = 1;
$_SESSION["b"] = "b";
?>
<a href="b.php">Перейти на следующую страницу</a>

b.php
<?php
header("Content-Type:text/html; charset=utf8");
session_start();
var_dump(session_decode());

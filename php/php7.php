<?php

/////////////////////////////////////////////////////
////Оператор spaceship <=> (космический корабль)/////
/////////////////////////////////////////////////////
var_dump(1 <=> 1); // = 0
var_dump(1 <=> 0); // > 1
var_dump(0 <=> 1); // < -1

//Пример:
$numbers = [9,8,7,6,5,4,3,2,1];
usort($numbers, function($n1, $n2){
    return  $n1 <=> $n2;
});
var_dump($numbers);





/////////////////////////////////////////////////////
///////////Оператор объединения с null //////////////
/////////////////////////////////////////////////////
$username = $_GET['user'] ?? 'nobody';
$username = $_GET['user'] ?? $_POST['user'] ?? 'nobody';
//Вместо isset
$username = isset($_GET['user']) ? $_GET['user'] : 'nobody';





/////////////////////////////////////////////////////
///////////////Поддержка Unicode/////////////////////
/////////////////////////////////////////////////////
//Символы Unicode испрользуются как база для UTF
//https://unicode-table.com/ru/
echo "\u{262F}" . "<br>"; //php подставит





/////////////////////////////////////////////////////
////////Функция целочисленного деления intdiv()//////
/////////////////////////////////////////////////////
var_dump(intdiv(10, 3));





/////////////////////////////////////////////////////
//////////////Функции для генерации//////////////////
///////////КРИПТОГРАФИЧЕСКИ БЕЗОПАСНЫХ///////////////
///////////////строк и целых чисел///////////////////
/////////////////////////////////////////////////////
var_dump(random_bytes(10));
var_dump(random_int(1, 10));





/////////////////////////////////////////////////////
/////////preg_replace_callback_array()///////////////
/////////////////////////////////////////////////////
//Позволяет заменить целый массив значений
$subject = 'Aaaaaa Bbb';
preg_replace_callback_array(
    [
        '/[a]+/i' => function ($match) {
            var_dump($match);
        },
        '/[b]+/i' => function ($match) {
            var_dump($match);
        }
    ],
    $subject
);



//Декларация скалярных типов
//Декларация возвращаемых значений
//Задание констант массивов с помощью define()
//Анонимные классы
//Closure::call()
//unserialize() с фильтрацией
//IntlChar
//Ожидания
//Групповые декларации use
//Выражение return в генераторах
//Делегация генератора
//Опции сессий
//Изменения в обработке ошибок и исключений
//Функциональность, объявленная устаревшей

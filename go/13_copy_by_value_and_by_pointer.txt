
//////////////////////////
//1. Массивы и структуры//
//////////////////////////

//Массивы и структуры копируются и передаются в функцию или метод ПО ЗНАЧЕНИЮ
a := [3]string{"one"}
s := struct{ Field string }{"value"}

//Копирование (создаст копию)
a2 := a
a2[1] = "two"
s2 := s
s2.Field = "second value"

//Передача в функцию (создаст копию)
func(a [3]string, s struct{ Field string }) {
    a[2] = "three"
    s.Field = "third value"
}(a, s)

fmt.Println(a, s) //[one  ] {value} - исходные массив и структура - без изменений


/////////////////////
//2. Слайсы и карты//
/////////////////////

//Слайсы и мапы копируются и передаются в функцию или метод ПО УКАЗАТЕЛЮ
//Т.к. под капотом слайса и мапы - структура, кот. хранит указатель на данные,
//при копировании адрес тоже скопируется
s := make([]string, 3)
s[0] = "one"
m := make(map[string]int)
m["one"] = 1

//Копирование (по указателю)
//Значение в слайс присвоено по СУЩЕСТВУЮЩЕМУ индексу (без append)
s2 := s
s2[1] = "two"
m2 := m
m2["two"] = 2

//Передача в функцию (по указателю)
func(s []string, m map[string]int) {
    s[2] = "three"
    m["three"] = 3
}(s, m)

fmt.Println(s, m) //[one two three] map[one:1 three:3 two:2]
//все 3 изменения попали и в слайс, и в мап


//////////////////
//Функция append//
//////////////////
//ВАЖНОЕ УТОЧНЕНИЕ!!!
//При использовании функции append над копией слайса, в исходный слайс данные не попадут
s := make([]string, 3)
s[0] = "one"

s = append(s, "two")

s2 := s
s2 = append(s2, "three")

func(s []string) {
    s = append(s, "four")
}(s)

fmt.Println(s) //[one   two]

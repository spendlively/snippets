Apache
- предлагает несколько модулей
- модули включаются динамически


mpm_prefork
- создает 1 процесс с одним потоком на каждое соединение
- каждый процесс может обработать только одно соединение одновременно
Каждый процесс потребляет значительный объем ram
- рекомендуется использовать как безопасный метод работы с mod_php, т.к. PHP не является потокобезопасным


mpm_worker
- создает 1 процесс с несколькими потоками на несколько соединений
- новое соединение может быть сразу обработано свободным потоком, а не ждать пока освободится процесс
- соединение будет удерживать поток вне зависимости от того активное это соединение или keep-alive


mpm_event
- похож на mpm_worker
- оптимизрован под работу с keep-alive соединениям
- выделяет отдельные потоки для keep-alive соединений и отдельные потоки для активных соединений
- позволяет модулю не погрязнуть в keep-alive соединениях, что необходимо для быстрой работы



//////////////////////////////////////////////////
////////////////////ОПТИМИЗАЦИЯ///////////////////
//////////////////////////////////////////////////
1. Отключение ненужных модулей
Обычно Вам не нужно ничего, кроме таких модули:
mod_alias
mod_authz_host
mod_deflate
mod_dir
mod_expires
mod_headers
mod_mime
mod_rewrite
mod_log_config
mod_autoindex
mod_negotiation
mod_setenvif
Получить список модулей
#только статически скомпилированные модули
apache2ctl -l
apache2 -l
#все модули
apache2ctl -M


2. MPM
Выбрать worker (один поток на запрос) вместо prefork (один процесс на запрос) для новых запросов
Вариант 1
nano /etc/sysconfig/httpd
HTTPD=/usr/sbin/httpd.worker
/etc/init.d/apache2 restart
Вариант 2
Установить модуль worker
dpkg -l | grep prefork
apt-get install apache2-mpm-worker
/etc/init.d/apache2 restart
apache2ctl -M 2>&1| grep mpm


3. Отключение .htaccess
AllowOverride None
Все настройки переместить в conf


4. MaxClients (максимальное количество параллельных запросов)
Адаптируется постоянно с течением времени в пределах значений в 128...4096:
Если сервер уже обслуживает MaxClients запросов, новые запросы попадут в очередь, размер которой устанавливается с помощью директивы ListenBacklog


5. MinSpareServers, MaxSpareServers, и StartServers
Эти директивы позволяют заранее иметь в памяти созданные процессы, чтобы не приходилось этого делать во время получения запроса. Они устанавливаются только для prefork mpm.
StartServers 3 (При запуска Apache будет создавать 3 процесса)
MinSpareServers 3 (Apache не будет убивать свободные процессы, если их остается менее трех)
MaxSpareServers 5 (Максимум 5 свободных процессов, остальные будут уничтожаться)


6. MaxRequestsPerChild
Сколько запросов может обработать один дочерний процесс/поток прежде чем он будет завершен
По умолчанию 0 (созданный процесс/поток не будет завершен никогда)
Позволяет избавиться от проблем с утечкой памяти
MaxRequestsPerChild 4096 (После 4096 обработанных запросов процесс будет перезапущен)


7. KeepAlive
Позволяют устанавливать постоянные соединения между клиентом и сервером
Экономит ресурсы на отсутствии повторной установки соединений.
Обязательно включайте эту опцию
KeepAlive On
KeepAliveTimeout 30 (время ожидания перед закрытием соединения в 30 секунд)
Может быть вреден у download-сервера, сервер закрывает соединение не сразу, а ждет какое-то время (KeepAliveTimeout).


8. Сжатие!!!!!
Включение gzip существенно уменьшит размер трафика.
Это нужно делать всегда.
AddOutputFilterByType DEFLATE text/plain
AddOutputFilterByType DEFLATE text/html
AddOutputFilterByType DEFLATE text/xml
AddOutputFilterByType DEFLATE text/css
AddOutputFilterByType DEFLATE application/xml
AddOutputFilterByType DEFLATE application/xhtml+xml
AddOutputFilterByType DEFLATE application/rss+xml
AddOutputFilterByType DEFLATE application/javascript
AddOutputFilterByType DEFLATE application/x-javascript
(проверка что gzip работает http://highloadtools.com/gzip)


9. DNS
Выключайте лишние запросы к DNS в Apache
HostnameLookups Off
Так Apache будет записывать в лог IP адрес клиента вместо его хоста.
Всегда используйте IP адрес в директивах Allow From и Deny From, а не доменные имена.
Allow From 1.1.1.1
Deny From 2.2.2.2

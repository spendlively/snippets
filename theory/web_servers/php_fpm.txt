
//link
https://www.php.net/manual/ru/install.fpm.configuration.php


PHP-FPM
 - контролирует количество работающих PHP-процессов,
частоту их перезапуска для борьбы с утечками памяти
 - один процесс одновременно обрабатывает один запрос
 - подвержен DoS-атакам путем "длительных запросов"
если N пользователей одновременно начнут делать upload файла медленно,
N+1-ый пользователь получит 504 ошибку


////////////////////////////////////////////////////////
///////////////Конфигурирование процессов///////////////
////////////////////////////////////////////////////////
//process.max
 - Максимальное количество процессов, которое может породить FPM
 - по умолчанию = 0


//pm
 - способ, которым fpm будет контролировать создание дочерних процессов


//Возможные значения pm: static, ondemand, dynamic
//static
 - фиксированное число дочерних процессов (pm.max_children)


//ondemand
 - число процессов, порождающихся по требованию
когда появляются запросы, в отличие от опции dynamic,
когда стартует определенное количество процессов,
равное pm.start_servers, вместе с запуском службы.


//dynamic
 - динамически изменяющееся число дочерних процессов
 - вместе с запуском службы стартует количество процессов равное pm.start_servers
 - задается на основании следующих директив:
(pm.max_children, pm.start_servers, pm.min_spare_servers, pm.max_spare_servers)


//Дополнительные директивы для pm = dynamic

//pm.max_children (pm = dynamic, static)
 - число дочерних процессов, которые будут созданы, когда pm установлен в static
 - или же максимальное число процессов, которые будут созданы, когда pm установлен в dynamic
 - является обязательным.
 - устанавливает ограничение на число одновременных запросов,
которые будут обслуживаться
 - эквивалент директивы ApacheMaxClients с mpm_prefork
и переменной окружения среды PHP_FCGI_CHILDREN в в оригинальном PHP FastCGI


//pm.start_servers (pm = dynamic)
 - число дочерних процессов, создаваемых при запуске
 - используется, только когда pm установлен в dynamic
 - по умолчанию: min_spare_servers + (max_spare_servers - min_spare_servers) / 2


//pm.min_spare_servers (pm = dynamic)
 - желаемое минимальное число неактивных процессов сервера
 - используется, только когда pm установлено в dynamic
 - обязательный параметр в случае pm = dynamic


//pm.max_spare_servers (pm = dynamic)
 - желаемое максимальное число неактивных процессов сервера
 - используется, только когда pm установлен в dynamic
 - это обязательный параметр в случае pm = dynamic

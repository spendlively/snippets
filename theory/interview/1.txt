/Explain
https://habr.com/company/oleg-bunin/blog/309328/
1. Тип доступа
- ALL - сканирование всей таблицы
- eq_ref - это поиск по ключу
2. possible_keys
- это ключи, которые оптимизатор планирует использовать, а key — ключ, который он выбрал
3. key_len - это длина индекса, которую он использует
4. Количество строк, которое ожидается

//Джойны
1. left
2. inner

//Нормальные формы
1. В каждом поле должно храниться только одно значение
имя, фамилия, отчество, контакты через запятую
2. Неключевое поле должно зависить от всех полей первичного ключа + 1НФ
марка авто, модель авто, цена, скидка (одна на все марки)
3. Поля не должны повторяться в разных записях + 2НФ
марка авто, модель авто, цена (модель повторяется)

//SOLID
Принцип единственной ответственности
- класс должен иметь одну ответственность
Принцип открытости-закрытости
- Для этого нужно программировать на уровне интервейсов а не реализации
Принцип подстановки Барбары Лисков
- Поведение насладуемого класса не должно противоречить поведение базового класса
- Метод в наследуемом классе должен либо усиливать, либо повторять метод базового класса
- Метод в родительском классе должен либо ослаблять, либо повторять метод дочернего класса
- Код не должен поломаться если вместо дочернего класса использовать родительский
Принцип разделения интерфейса
- Много специализированных интерфейсов лучше, чем один универсальный
Принцип инверсии зависимостей
- Зависимости внутри системы строятся на основе абстракций, а не деталей.
- Модули верхнего уровня не зависят от модулей нижнего уровня.
- Абстракции не должны зависеть от деталей.
- Детали должны зависеть от абстракций.

//Паттерны GoF
Порождающие
1. Синглтон
2. Фабричный метод
3. Абстрактная фабрика
4. Прототип - поручает создание копий самим объектам добавляя интерфейс клонирования
5. Строитель - выносит конструирование объекта за пределы его собственного класса

Структурные
1. Адаптор - класс предоставляющий интерфейс к методу другого класса
2. Фасад - класс, предоставляющий более простой интерфейс к более сложному классу
3. Декоратор - класс, который модернизирует результат вызова метода другого класса

Поведенческие
1. Итератор
2. Наблюдатель
3. Шаблонный метод
4. Посетитель
5. Цепочка обязанностей

//Паттерны gof и бд
1. Table data gateway (Объект класса - Таблица с CRUD методами)
2. Row data gateway или Active record (Класс - таблица, объект класса - запись таблицы)
3. Data mapper (Преобразует объекты домена в объекты испточника данных - более гибкий)

//Инверсии зависимостей
1. IoC
- это общий термин, не вы вызываете библиотечный код, а библиотечный код вызывает вас
2. DI
- один из способов реализации инверсии управления
- в контейнере описываются зависимости, внешний код их инжектит

//Индексы
1. B-Tree (сбалансированное дерево)
2. Пространственные индексы
3. R-Tree (Regions Tree)
4. Hash (хранение не самих значений, а их хэшей: уменьшается размер и увеличивается скорость)

//Структуры данных
1. Стек (SplStack)
- данные извлекаются по принципу последний пришел первый вышел
2. SplQueue - Очередь
- данные извлекаются по принципу первый пришел первый вышел
3. Куча SplMaxHeap, SplMinHeap (древовидная)
- данные извлекаются отсортированные по значению
4. Очередь с приоритетами (SplPriorityQueue)
- данные извлекаются отсортированные по приоритету
5. Массив с фиксированным количеством элементов (SplFixedArray)
6. Хранилище объектов SplObjectStorage

//Алгоритмы
Алгоритмическая сложность
- линейная сложность O(n)
- логарифмическая сложность O(ln(n))
- квадратичная сложность O(n^2)
- квазилинейная сложность O(n log n)
- экспоненциальная
Сортировка
- Сортировка вставками O(n^2)
- Сортировка пузырьком O(n^2)
- Быстрая сортировка O(n log n)
- Сортировка слиянием O(n log n)

Индексы составные и использ при поиске
Запросы

Mvc mvvm ...
https://toster.ru/q/226608

Деревья
Обход графа в ширину
Middleware
Diactors
Враги тестов 3
Задачки: найти неповтряющееся число, снрвис коротких ссылок
Как реализованы транзакции или блокировки в mysql: версионирование или ...

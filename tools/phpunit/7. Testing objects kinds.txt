
//Виды тестов
1. тесты состояния (state based)
    - тесты, проверяющие что вызываемый метод объекта отработал корректно,
     проверяя состояние тестируемого объекта после вызова метода.
2. тесты взаимодействия (interaction tests)
    - тесты, в которых тестируемый объект производит манипуляции с другими объектами.
    Применяются, когда требуется удостовериться, что тестируемый объект корректно взаимодействует с другими объектами.
3. интеграционные тесты
    - тесты, проверяющие работоспособность двух или более модулей системы,
    но в совокупности — то есть нескольких объектов как единого блока



//5 видов тестовых объектов
1. Dummy object - ПРОСТОЙ ПАРАМЕТР БЕЗ ПОВЕДЕНИЯ НУЖНЫЙ ДЛЯ СИГНАТУРЫ
обычно передается в тестируемый класс в качестве параметра, но не имеет поведения,
с ним ничего не происходит, никакие методы не вызываются.
Примером таких dummy-объектов являются new object(), null, «Ignored String» и т.д.

2. Test stub - ПАРАМЕТР ДЛЯ ПОЛУЧЕНИЯ ДАННЫХ ИЗ ВНЕШНЕЙ ЗАВИСИМОСТИ (КОНФИГ)
используется для получения данных из внешней зависимости, подменяя её.
При этом игнорирует все данные, могущие поступать из тестируемого объекта в stub.
Один из самых популярных видов тестовых объектов.
Тестируемый объект использует чтение из конфигурационного файла?
Передаем ему ConfigFileStub возвращающий тестовые строки конфигурации для избавления зависимости на файловую систему.

3. Test spy - ЗАПИСЫВАЕТ ПОСЛЕДОВАТЕЛЬНОСТЬ ВЫЗОВОВ С ПЕРЕДАННЫМИ ПАРАМЕТРАМИ
 используется для тестов взаимодействия, основной функцией является запись данных и вызовов,
 поступающих из тестируемого объекта для последующей проверки корректности вызова зависимого объекта.
 Позволяет проверить логику именно нашего тестируемого объекта, без проверок зависимых объектов.

4. Mock object (пародия) - ИЗОЛИРОВАННЫЙ СГЕНЕРИРОВАННЫЙ ОБЪЕКТ ДЛЯ ТЕСТИРОВАНИЯ
как spy, однако не записывает последовательность вызовов с переданными параметрами для последующей проверки,
а может сам выкидывать исключения при некорректно переданных данных.
Т.е. именно мок-объект проверяет корректность поведения тестируемого объекта.

5. Fake object - ЭМУЛЯТОР КОНКРЕТНОГО ПРИЛОЖЕНИЯ БД ИЛИ ФАЛЬШИВЫЙ ВЕБСЕРВИС
используется в основном чтобы запускать (незапускаемые) тесты (быстрее) и ускорения их работы.
Эдакая замена тяжеловесного внешнего зависимого объекта его легковесной реализацией.
Основные примеры — эмулятор для конкретного приложения БД в памяти (fake database) или фальшивый вебсервис.

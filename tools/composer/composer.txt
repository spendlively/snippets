////////////////////////////////////////
///////////Установка composer///////////
////////////////////////////////////////
//Глобально
apt-get install composer
//Локально
https://getcomposer.org/download/



/////////////////////////////////////////
////////////////команды//////////////////
/////////////////////////////////////////

 - init
    - интерактивная инициализация composer проекта
    - генерация composer.json

 - install
    - считывает composer.json
    - разрешает зависимости и устанавливает их в папку vendor
    - если есть composer.lock, будут использованы точные версии, указанные в файле

 - update
    - получить новые версии пакетов и обновить composer.lock
    - также используется, если добавились новые зависимости
    - composer update vendor/package1 vendor/package2 обновит только два пакета
    - можно обновить все пакеты одного вендора командой composer update vendor/*

 - require
    - добавляет новые зависимости из командой строки
    - composer require vendor/package:2.* vendor/package2:dev-master
    - если не указать версию, автоматически подтянет последнюю стабильную версию

 - remove
    - точная противоположность require.

 - dump-autoload
    - обновить autoloader, если появились новые классы или правила автолоадинга

К командам install, update и dump-autoload можно добавить ключ —optimize-autoloader (-o),
чтобы конвертировать правила автозагрузки psr-0/4 в «карту классов», чтобы ускорить автозагрузку.
Рекомендуется для production окружения.

/////////////////////////////////////////
////////////////require//////////////////
/////////////////////////////////////////
//Загрузка из packagist.org
//Из конфига
{
    "require": {
        "monolog/monolog": "1.0.*"
    }
}



/////////////////////////////////////////
////////////////autoload/////////////////
/////////////////////////////////////////
//Использование автозагрузчика
require __DIR__ . '/vendor/autoload.php';

//Добавление неймспейса Acme в автолодер
{
    "autoload": {
        "psr-4": {"Acme\\": "src/"}
    }
}

//Добавление неймспейса на лету
$loader = require __DIR__ . '/vendor/autoload.php';
$loader->addPsr4('Acme\\Test\\', __DIR__);

//Создаие собственного пакета
{
  "name": "spendlively/hello-world",
  "version": "0.0.1"
}



/////////////////////////////////////////
//////////////repositories///////////////
/////////////////////////////////////////
//Подгрузка пакета из github к себе в vendor
{
    "name": "my/project",
    "repositories": [
        {
            "type": "vcs",
            "url": "https://github.com/spendlively/test"
        }
    ],
    "require": {
        "spendlively/test": "dev-master"
    }
}

//Composer, VCS, PEAR


/////////////////////////////////////////
//////////////////config/////////////////
/////////////////////////////////////////
{
    "config": {
    }
}




/////////////////////////////////////////
///////////////////CLI///////////////////
/////////////////////////////////////////
//Создание файла composer.json
composer init
--name: Name of the package.
--description: Description of the package.
--author: Author name of the package.
--type: Type of package.
--homepage: Homepage of the package.
--require: Package to require with a version constraint. Should be in format foo/bar:1.0.0.
--require-dev: Development requirements, see --require.
--stability (-s): Value for the minimum-stability field.
--license (-l): License of package.
--repository:

//Загрузка/установка/разрешение зависимостей
composer install

//Обновление все пакеты / некоторые пакеты
composer update
composer update vendor/package vendor/package2

//Добавить пакет в composer.json
composer require vendor/package:dev-master vendor/package2:2.*
//Создать новый файл composer.json
composer require

//Удалить пакет
composer remove vendor/package

//Проверка локальныйх изменений
composer status

//Редактирование конфига
composer config

//Создание нового проекта на основе существующего пакета
//Эквивалент git clone
composer create-project doctrine/orm path 2.2.*
//Zend Framework 2
composer create-project --stability="dev" zendframework/skeleton-application ./
//Yii 2
php composer.phar global require "fxp/composer-asset-plugin:^1.2.0"
php composer.phar create-project yiisoft/yii2-app-basic basic 2.0.*
php composer.phar create-project yiisoft/yii2-app-advanced advanced 2.0.*

//Очистка кэша
composer clear-cache

//Поиск пакетов
composer search -N log

//Информация о пакете
composer show monolog/monolog

//Ввод github токена
composer config -g github-oauth.github.com <токен>



//monolog configuration
https://github.com/symfony/monolog-bundle/blob/master/DependencyInjection/Configuration.php

//Changing monolog.yaml in four steps
 - step 1: handler: nested -> grouped
 - step 2: new handler type=group
 - step 3: new handler type=filter
or
 - step 3: new handler type=deduplication
 - step 4: new handler type=swift_mailer

//////////////////////////////////////////////////////
//Sending filtered errors (without alerts and trace)//
//////////////////////////////////////////////////////
//config/packages/prod/monolog.yaml
(without deduplicated)

monolog:
    handlers:
        main:
            type: fingers_crossed
            action_level: error
#            Sending emails: step 1: change handler: nested -> grouped
            handler: grouped
            excluded_http_codes: [404, 405]
#        Sending emails: step 2: new handler type=group (in order to send errors into two handlers)
        grouped:
            type:    group
            members: [nested, swift_filter]
        nested:
            type: stream
            path: "%kernel.logs_dir%/%kernel.environment%.log"
            level: debug
        console:
            type: console
            process_psr_3_messages: false
            channels: ["!event", "!doctrine"]
        deprecation:
            type: stream
            path: "%kernel.logs_dir%/%kernel.environment%.deprecations.log"
        deprecation_filter:
            type: filter
            handler: deprecation
            max_level: info
            channels: ["php"]
#        Sending emails: step 3: new handler type=filter (in order to filter unwanted levels)
        swift_filter:
            type: filter
            handler: swift
            accepted_levels: ["error", "critical", "emergency"]
#        Sending emails on errors: step 4: new handler type=swift_mailer (actual sending)
        swift:
            type:       swift_mailer
            from_email: 'noreplay@sender.me'
            to_email:   '%env(ADMIN_EMAIL)%'
            subject:    'Error: %%message%%'
            formatter:  monolog.formatter.html
            content_type: text/html



////////////////////////////////////////
//Sending errors with alerts and trace//
////////////////////////////////////////
//config/packages/prod/monolog.yaml
(with deduplicated, without filter)

monolog:
    handlers:
        main:
            type: fingers_crossed
            action_level: error
#            Sending emails on errors: step 1: handler: nested -> grouped
            handler: grouped
            excluded_http_codes: [404, 405]
#        Sending emails on errors: step 2: new handler type=group
        grouped:
            type:    group
            members: [nested, deduplicated]
        nested:
            type: stream
            path: "%kernel.logs_dir%/%kernel.environment%.log"
            level: debug
        console:
            type: console
            process_psr_3_messages: false
            channels: ["!event", "!doctrine"]
        deprecation:
            type: stream
            path: "%kernel.logs_dir%/%kernel.environment%.deprecations.log"
        deprecation_filter:
            type: filter
            handler: deprecation
            max_level: info
            channels: ["php"]
#        Sending emails on errors: step 3: new handler type=deduplication
        deduplicated:
            type:    deduplication
            handler: swift
#        Sending emails on errors: step 4: new handler type=swift_mailer
        swift:
            type:       swift_mailer
            from_email: 'noreplay@sender.com'
            to_email:   '%env(ADMIN_EMAIL)%'
            subject:    'An Error Occurred! %%message%%'
            level:      debug
            formatter:  monolog.formatter.html
            content_type: text/html

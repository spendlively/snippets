
1. Свойства в data будут реактивными, только если они существовали при создании экземпляра



2. Имена служебных свойств объекта Vue начинаются с префикса $, чтобы отличаться от пользовательских свойств
vm.$data === data // => true
vm.$el === document.getElementById('example') // => true

// $watch — это метод экземпляра
vm.$watch('a', function (newValue, oldValue) {
  // Этот коллбэк будет вызван, когда изменится `vm.a`
})



3. Не используйте стрелочные функции в свойствах экземпляра и в коллбэках,
например created: () => console.log(this.a)
или vm.$watch('a', newVal => this.myMethod())



4. Все шаблоны Vue являются валидным HTML-кодом,
который могут распарсить все HTML-парсеры и браузеры.



5. При использовании с булевыми атрибутами
<button v-bind:disabled="isBut">Кнопка</button>
Если значением isButtonDisabled будет null, undefined или false,
то атрибут disabled не добавится в элемент <button>.



6. Вычисляемые свойства кешируются, основываясь на своих реактивных зависимостях
и пересчитывается лишь тогда, когда изменится одна из его реактивных зависимостей



7. Элемент с директивой v-else должен следовать сразу за элементом с директивой v-if
или v-else-if, иначе он не будет распознан.



8. В отличае от v-if
элемент с v-show будет всегда оставаться в DOM,
а изменяться будет лишь свойство display в его параметрах CSS



9. Не используйте v-if вместе с v-for

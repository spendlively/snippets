
//////////////////////////////////////////////////////////////////
///////////////////////Дружественные функции//////////////////////
//////////////////////////////////////////////////////////////////
//Дружественную функцию можно указать и в public и в private
class Test{
public:
    friend void changeX(Test &test, int value);

private:
    int x = 0;
}
...
void changeX(Test &test, int value){
    test.x = value;
}
...
Test a;
changeX(a, 1);





//////////////////////////////////////////////////////////////////
///////////////////////Дружественные классы///////////////////////
//////////////////////////////////////////////////////////////////
//Дружественные классы
class A{
    friend B;

private:
    x = 0;
}
...
class B{
public:
    void setAX(A & a, int value){
        a.x = value;
    }
}
...
A a;
B b;
b.setAX(a, 1);

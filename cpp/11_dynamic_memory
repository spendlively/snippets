
////////////////////////////////////////////////////////////////////
/////////////////////////////ПРОСТОЙ ТИП////////////////////////////
////////////////////////////////////////////////////////////////////
//Динамическое выделение памяти переменной базового типа
int *ptr = new int;
*ptr = 5;



//Освобождение памяти
delete ptr; //в *ptr могут попасть случайные данные



//Защита от обращения к указателю после освобождения памяти
//NULL
delete ptr;
ptr = NULL; //Или ptr = 0, *ptr выдаст ошибку
//Проверка
if(ptr != NULL){}



//nullptr - Предпочтительный вариант
delete ptr;
ptr = nullptr;
//Проверка
if(ptr != nullptr){}





////////////////////////////////////////////////////////////////////
////////////////////////ДИНАМИЧЕСКИЙ МАССИВ/////////////////////////
////////////////////////////////////////////////////////////////////
//Одномерный динамический массив
int size = 3;
int *arr = new int[size];
arr[0] = 1;
*(arr + 1) = 1;
delete[] arr;



//Двумерный динамический массив
int size = 3;
int **arr = new int *[size];

for (int j = 0; j < size; ++j) arr[j] = new int[size];

for (int j = 0; j < size; ++j) delete[] arr[j];

delete[] arr;

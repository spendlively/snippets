
//Принцип единственной ответственности
//Single Responsibility
 - класс должен иметь одну ответственность


//Принцип открытости-закрытости
//Open-closed
 - Принцип открытости закрытости
 - Для этого нужно программировать на уровне интервейсов а не реализации


//Принцип подстановки Барбары Лисков
//Liskov
 - Поведение насладуемого класса не должно противоречить поведение базового класса
 - Метод в наследуемом классе должен либо усиливать, либо повторять метод базового класса
 - Метод в родительском классе должен либо ослаблять, либо повторять метод дочернего класса
 - Код не должен поломаться если вместо дочернего класса использовать родительский


//Принцип разделения интерфейса
//Interface segregation
 - Много специализированных интерфейсов лучше, чем один универсальный


//Принцип инверсии зависимостей
//Dependency Invertion
 - Зависимости внутри системы строятся на основе абстракций, а не деталей.
 - Модули верхнего уровня не зависят от модулей нижнего уровня.
 - Абстракции не должны зависеть от деталей.
 - Детали должны зависеть от абстракций.

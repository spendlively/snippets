
//класс java.lang.Object
Все классы наследуются от java.lang.Object автоматически (не надо указывать)

//методы java.lang.Object
public String toString() - строка с описанием объекта
public boolean equals(Object obj) - сравнение
public int hashCode() - хеш объекта
protected Object Clone() - низкоуровневая операция копирования

Object object = new Object();


//this vs super
 - this.childMethod()
 - super.parentMethod()


//модификаторы доступа (public, protected, private)
 - метод без модификатора доступа доступен из самого класса и классов того же пакета


//МЕТОД КОТ НЕТ В РОДИТЕЛЬСКОМ КЛАССЕ/ИНТЕРФЕЙСЕ
//если в ссылку с типом родительского класса (или интерфейса)
//присвоить объект дочернего класса (или объекта реализующего интерфейс)
//по ней НЕЛЬЗЯ будет ВЫЗВАТЬ метод
//которого НЕТ в РОДИТЕЛЬСКОМ классе (или интерфейсе)
Parent obj = new Child();
//Child obj = new Child();
System.out.println(obj.foo());
System.out.println(obj.bar()); //ошибка при компиляции


//вызвать конструктор родительского класса
public ClassName(){
    super();
}


//абстрактный класс
//зачем нужен абстрактный класс
чтобы 2 объекта разных классов объединить в массив
у них должен быть один интерфейс,
либо они должны наследовать один абстрактный класс,
если в них есть повторяютщийся код.

//абстрактный класс, это класс у которогог есть хотя бы один метод

//полиморфизм - вызов метода наследника по ссылке базового класса
полиморфизм позволяет вызывать метод дочернего класса по ссылке базового класса

//инкапсуляция
инкапсуляция позволяет классам самим отвечать за изменение своего состояния.
Например с помощью приватного свойства и публичного геттера


Интерфейсы
public interface Test{
    public int foo();
}

Переменные в интерфейсе неявно объявляются как final и static,
т.е. их нельзя изменить в классе, реализующем интерфейс.
И они долж­ны быть инициализированы.

Если объявить переменную как ссылку на интерфейс, а затем проинициализировать ее объектом класса, реализующего интерфейс,
для этой переменной будут доступны лишь те методы, которые определены в интерфейсе.

Если класс не полностью реализуеб интерфейс, он должен быть объявлен абстрактным.

Вложенный интерфейс:
class А {
	public interface NestedIF {
		boolean isNotNegative(int х);
	}
}

class В implements A.NestedIF {
	public boolean isNotNegative(int х){
		return х < О ? false : true;
	}
}


В JDK8 метод в интерфейсе может содержать реализацию по умолчанию.
interface Foo {
    default void bar(){
        System.out.println("bar!");
    }
}

Интерфейсы могут содержать статические методы
interface Foo {
    static void baz(){
        System.out.println("baz!");
    }
}

Foo.baz();





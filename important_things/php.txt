0. Ближайшее изучение
    - Хранение сессий в субд
    - Профессиональная отладка
    - Помошники phpStorm для проверки качества кода
    - Глобальные сессии в типовые задачи
    - Psr-3 logger

1. Профессиональное программирование на php (то что нужно делать всегда)
    - следование psr (автозагрузка, кодирование)
    - модульность composer
    - tdd phpUnit
    - автоматическое документирование
    - безопасность и криптография
    - отладка (xdebug) и профилирование (xhprof)
    - линтеры и проверка качества кода
    - автогенерация кода по типу emmet
    - активное использование SPL
    - явная типизация php7
    - профессиональное использование эксепшнов
    - модные функции: деструктуризация, массивы, строки, датавремя
    - использование знаний о том как работает php
    - solid, di, Inversion of Control (IoC)
    - ORM
    - паттерны
       - gof
       - Delegation
       - Service Locator
       - Repository
       - Registry
       - Object pool
       - Multiton
       - Model-View-ViewModel (MVVM)
       - Hierarchical model–view–controller (HMVC)
    - Psr logger
    - Git
    - psr-5 и выше

2. Базовые знание по php

3. Инструменты и сервисы для php
    - Twig, Smarty
    - Doctrine, Dbal
    - PostgreSQL
    - Reddis, Memcached
    - RabbitMQ
    - Mongo
    - Xdebug, Xhprof
    - Docker
    - SphixSearch, Elastic Search
    - Cassandra
    - GraphQL

4. Типичные задачи в php
    - Загрузка файлов
    - Хранение сессий субд

5. План, для быстрого погружения в новый фреймворк/инструмент/проект
    - Общие вопросы, записать в блокнот
        - архитектура, 3 звенка, вебсервера
        - составить список технологий
        - где находится вики/докумментация
        - описание процесса разработки
        - описание схемы субд
        - скрам/канбан: что и как делать по шагам
        - как происходит деплой
        - как происходит миграция бд
        - как используется репоз: общий репоз, пулл-реквест
        - где лежат тесты, какой командой вызываются
        - uml-диаграммы основных классов
    - Структура файлов и каталогов
        - в каких папках какие файлы лежат и за что отвечают
        - какой контроллер за что отвечает
        - где хранятся сессии и как работает аутентификация
        - сервисы rpc/rest/soap, аутентификация
        - как дебажить
    - Попробовать и составить сниппеты
        - mvc
        - автозагрузчик
        - неймспейсы: где что хранится
        - роутинг
            - как составляются url-адреса
            - парсинг url и выбор контроллеров
        - xhprof, xdebug
        - примеры get/post/ajax запросов
        - запись в сессию/куку/локалсторадж
        - вывод данных во вьюшку
        - биндинг и экранирование в коде
        - как работать с субд/монго/кэшем, ORM
        - аутентификация/роли
        - локализация
        - логгирование
    - Первая задача
        - разобраться как работает конкретная часть кода
        - разобраться в ошибке/недочете и том, что нужно сделать
        - подправить psr и актуализировать комментарии
        - выполнить задачу
        - подправить/описать/выполнить модульный тест
        - закоммитить
        - отписаться в багтрекер

6. Как не надо делать с обоснованием
 - Нет SOLID
    - Отсутствие интерфейсов
 - Отсутствие возможности внедрять сервисы в контроллер
 -

7. Фундаментальные знания
    - Сети
    - DDD
    - Операционная система
    - Английский язык
    - HL
       - профилирование explain
       - репликация СУБД
       - map reduce

8. Ссылки которые нужно периодически перечитавать
 - http://designpatternsphp.readthedocs.io/ru/latest/README.html
 - https://habrahabr.ru/post/337692/
 - IoC на PHP https://habrahabr.ru/post/132084/
 - Autowiring